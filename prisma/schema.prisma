// This is a Prisma schema file
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  name          String?
  email         String    @unique
  password      String?
  role          UserRole  @default(CLIENT)
  company       String?
  position      String?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
  reports       Report[]
}

enum UserRole {
  ADMIN
  STAFF
  CLIENT
}

model Account {
  id                String  @id @default(uuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(uuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Service {
  id          String    @id @default(uuid())
  title       String
  slug        String    @unique
  description String    @db.Text
  content     String?   @db.Text
  icon        String?
  imageUrl    String?
  featured    Boolean   @default(false)
  order       Int       @default(0)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  projects    Project[]
}

model Project {
  id          String   @id @default(uuid())
  title       String
  slug        String   @unique
  summary     String   @db.Text
  description String?  @db.Text
  client      String?
  outcome     String?  @db.Text
  imageUrl    String?
  featured    Boolean  @default(false)
  published   Boolean  @default(false)
  service     Service? @relation(fields: [serviceId], references: [id])
  serviceId   String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Testimonial {
  id        String   @id @default(uuid())
  name      String
  position  String?
  company   String?
  content   String   @db.Text
  rating    Int      @default(5)
  imageUrl  String?
  featured  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ContactSubmission {
  id        String   @id @default(uuid())
  name      String
  email     String
  phone     String?
  company   String?
  message   String   @db.Text
  status    String   @default("NEW")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Report {
  id        String   @id @default(uuid())
  title     String
  fileUrl   String?
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
